import glob
import os
import sys


import carla

import argparse
import math
import random
import time
import xml.dom.minidom
from xml.dom.minidom import Node
# import _findBox
# import _findPoint

m = "zalaFull"


def main():

    doc = xml.dom.minidom.parse(f'maps/{m}.xodr')
    roads = doc.getElementsByTagName("road")
    junctions = doc.getElementsByTagName("junction")

    # roads that cause parsing problems
    roads_to_rm = [1252, 2541, 8863, 11685,    7557, 9569, 9568, 10231, 2540, 10009]
    roads_to_rm = [1252, 2541, 8863, 11685]

    # juncs_to_rm = []
    juncs_to_keep = [-1, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 57, 58, 59, 60, 61, 62, 63, 64, 68, 69, 70, 71, 72, 73]
    # juncs_to_keep = [-1, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 68, 69, 70, 71, 72, 73, 74]
    juncs_to_keep = [-1, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 57, 58, 59, 60, 61, 62, 63, 64, 68, 69, 70, 71, 72, 73, 74]
    # problems: 27
    # juncs_to_keep = [-1, 28, 29,  31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 57, 59, 60, 61, 62, 63, 64, 68, 69, 70]


    # 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 68, 69, 70, 71, 72, 73, 74


    roads_to_keep = []
    # connection roads of junctions to keep
    # roads_to_keep = [10240, 8193, 10243, 10246, 8202, 8205, 8211, 8217, 10267, 8220, 8223, 8226, 8233, 10288, 8251, 8254, 10306, 8260, 10312, 10315, 10318, 8284, 8287, 8290, 6249, 10354, 8311, 8314, 10363, 8317, 10369, 10372, 6279, 6282, 10381, 10384, 10396, 8353, 8356, 6315, 6345, 8401, 6372, 6375, 6381, 6384, 6387, 8458, 8509, 8512, 8554, 10609, 8563, 10651, 10654, 10681, 10684, 2615, 2627, 2630, 2633, 2636, 4753, 4756, 4783, 4804, 6881, 6890, 4852, 4855, 4863, 6920, 11017, 4875, 11020, 4878, 6929, 11026, 4884, 11029, 2851, 11056, 4917, 11062, 11065, 4923, 6995, 11092, 4956, 4959, 9071, 9074, 11125, 4983, 7049, 11155, 11158, 11170, 9125, 11176, 7088, 11184, 7091, 11187, 9146, 7106, 9161, 11217, 5076, 7130, 7144, 11241, 9194, 9209, 11259, 11262, 9221, 11274, 9227, 7180, 11277, 9230, 9233, 11286, 5145, 11289, 11292, 7198, 7201, 11301, 11307, 9260, 11310, 5168, 11313, 11316, 9269, 7222, 11319, 11322, 9275, 11325, 11328, 11331, 11334, 11337, 11349, 11352, 9308, 9311, 11367, 11371, 9326, 9330, 9333, 11383, 9336, 7294, 11398, 7303, 11401, 9366, 11416, 11431, 7342, 5295, 11440, 11443, 11446, 11449, 11452, 11455, 11458, 5316, 11461, 11464, 11467, 11470, 9426, 11476, 7381, 7384, 5337, 9435, 11485, 9438, 11488, 9441, 3298, 7394, 9444, 3301, 11491, 9447, 3304, 11494, 11497, 3307, 3310, 7406, 7409, 9471, 5382, 11527, 3343, 5397, 11542, 9495, 11545, 3355, 11548, 11551, 11554, 9507, 11557, 9510, 11560, 11563, 11566, 11569, 11572, 11575, 11578, 5436, 9534, 3394, 5442, 9540, 3406, 3409, 5457, 9567, 3439, 3442, 3445, 3450, 3453, 3456, 5508, 11671, 3480, 11674, 3513, 3516, 5587, 5590, 5602, 5605, 5620, 5632, 5641, 5671, 5680, 5689, 5692, 9788, 7743, 9791, 5716, 7764, 9812, 7767, 9818, 9821, 7794, 9842, 9851, 9863, 9869, 7824, 9887, 9905, 7866, 9923, 9929, 9938, 9947, 9953, 9956, 9965, 7920, 9971, 9974, 9990, 9993, 9996, 10002, 10005, 7962, 7965, 7968, 5941, 7995, 5953, 5956, 5959, 8016, 8037, 6007, 8055, 6010, 6031, 6034, 6037, 6040, 6043, 6046, 6049, 6052, 8100, 10150, 6055, 10153, 6058, 10156, 6061, 6064, 10180, 8136, 10186, 10192, 10195, 8163, 8166, 10216, 8169, 8172, 10228, 8187, 8190]
    # OLD
    
    roads_to_keep = [10240, 8193, 10243, 10246, 8202, 8205, 8211, 8217, 10267, 8220, 8223, 8226, 8227, 8233, 10288, 8251, 8254, 10306, 8260, 10312, 10315, 10318, 6227, 8284, 8287, 8290, 6249, 10354, 10355, 10357, 8311, 8314, 10363, 8317, 10369, 10372, 6279, 4234, 6282, 10381, 10384, 10396, 10399, 8353, 8356, 6315, 6345, 8401, 6372, 6375, 6381, 4334, 6384, 6387, 8458, 4410, 8509, 8512, 8554, 6511, 10609, 8563, 10651, 10654, 10681, 10684, 4587, 2542, 4594, 6654, 6655, 10767, 10768, 8784, 2667, 4753, 4756, 8860, 8861, 8864, 4783, 6851, 4804, 6881, 6890, 4852, 4855, 4857, 4858, 4860, 4863, 6920, 11017, 4875, 11020, 4878, 6929, 11026, 4884, 11029, 11056, 4917, 11062, 11065, 4923, 6995, 11092, 6997, 6998, 2904, 2906, 4956, 4959, 9068, 11125, 4983, 7049, 11155, 11158, 11170, 11176, 11179, 11180, 11181, 7088, 11184, 7091, 11187, 7106, 3014, 11217, 5076, 7130, 7131, 7132, 7144, 11241, 11259, 11262, 11274, 7180, 11277, 11286, 5145, 11289, 3099, 11292, 7198, 7201, 11301, 11307, 11310, 5168, 5169, 5170, 11313, 11316, 7222, 11319, 11322, 11325, 11328, 11331, 11334, 11337, 11349, 11352, 11367, 11368, 11371, 9327, 5234, 5235, 5236, 9330, 9333, 11383, 9336, 7294, 11398, 7303, 11401, 9366, 11416, 11431, 7342, 5295, 11440, 11443, 11446, 11449, 11452, 11455, 11458, 5316, 11461, 11464, 11467, 11470, 9426, 11476, 7381, 7384, 5337, 9435, 11485, 9438, 11488, 9441, 3298, 7394, 9444, 3301, 11491, 9447, 3304, 11494, 11497, 3307, 3310, 7406, 7409, 9471, 5382, 11527, 3343, 5397, 11542, 9495, 11545, 3355, 11548, 3358, 11551, 11554, 9507, 11557, 9510, 11560, 11563, 11566, 11569, 11572, 11575, 11578, 5436, 9534, 5442, 9540, 5457, 9567, 9568, 9569, 3446, 3447, 3450, 3453, 3456, 5508, 7557, 7558, 7559, 7560, 3480, 3513, 3516, 3518, 5569, 5587, 5590, 3554, 5602, 3556, 5605, 5620, 5632, 5641, 5671, 5680, 5689, 5692, 9788, 7743, 9791, 5716, 7764, 5718, 7767, 9812, 9818, 9821, 7794, 9842, 9851, 9863, 9864, 9866, 5773, 9869, 5775, 7824, 9887, 9905, 7866, 9923, 9929, 9938, 9947, 9953, 9956, 9965, 7920, 9971, 9974, 9975, 5891, 5892, 5893, 9990, 9993, 9996, 10002, 10005, 10006, 10007, 10008, 10009, 7962, 7965, 7968, 5941, 7995, 5953, 5956, 5959, 8016, 8037, 6007, 8055, 6010, 6031, 6034, 6037, 6040, 6043, 6046, 6049, 6052, 8100, 10150, 6055, 10153, 6058, 10156, 6061, 6064, 6065, 10180, 8136, 10186, 10192, 10195, 8163, 8166, 10216, 8169, 8172, 6132, 10228, 10229, 10231, 8187, 8190]

    # connection roads and incoming roads of junctions to keep
    # MANUALLY REMOVED [2541, 8863]
    roads_to_keep = [10240, 8193, 10243, 10246, 8202, 8205, 8211, 8217, 10267, 8220, 8223, 8226, 8227, 8233, 10288, 8251, 8254, 10306, 8260, 10312, 10315, 10318, 6227, 8284, 8287, 8290, 6249, 10354, 10355, 10357, 8311, 8314, 10363, 8317, 10369, 10372, 6279, 4234, 6282, 10381, 10384, 10396, 10399, 8353, 8356, 6315, 6345, 8401, 6372, 6375, 6381, 4334, 6384, 6387, 8458, 4410, 8509, 8512, 8554, 6511, 10609, 8563, 10651, 10654, 10681, 10684, 4587, 2540, 2542, 4594, 6654, 6655, 10767, 10768, 2615, 2627, 2630, 2633, 2636, 8784, 2667, 4753, 4756, 8860, 8861, 8864, 4783, 8892, 6851, 4804, 6881, 6890, 4852, 4855, 4857, 4858, 4860, 4863, 6920, 11017, 4875, 11020, 4878, 6929, 11026, 4884, 11029, 2851, 11056, 4917, 11062, 11065, 4923, 6995, 11092, 6997, 6998, 2904, 2906, 4956, 4959, 9068, 9071, 9074, 11125, 4983, 7049, 11155, 11158, 11170, 9125, 11176, 11179, 11180, 11181, 7088, 11184, 7091, 11187, 9146, 7106, 3014, 9161, 11217, 5076, 7130, 7131, 7132, 7144, 11241, 9194, 9209, 11259, 11262, 9221, 11274, 9227, 7180, 11277, 9230, 9233, 11286, 5145, 11289, 3099, 11292, 7198, 7201, 11301, 11307, 9260, 11310, 5168, 5169, 5170, 11313, 11316, 9269, 7222, 11319, 11322, 9275, 11325, 11328, 11331, 11334, 11337, 11349, 11352, 9308, 9311, 11367, 11368, 11371, 9326, 9327, 5234, 5235, 5236, 9330, 9333, 11383, 9336, 7294, 11398, 7303, 11401, 9366, 11416, 11431, 7342, 5295, 11440, 11443, 11446, 11449, 11452, 11455, 11458, 5316, 11461, 11464, 11467, 11470, 9426, 11476, 7381, 7384, 5337, 9435, 11485, 9438, 11488, 9441, 3298, 7394, 9444, 3301, 11491, 9447, 3304, 11494, 11497, 3307, 3310, 7406, 7409, 9471, 5382, 11527, 3343, 5397, 11542, 9495, 11545, 3355, 3356, 11548, 3358, 11551, 11554, 9507, 11557, 9510, 11560, 11563, 11566, 11569, 11572, 11575, 11578, 5436, 9534, 3394, 5442, 9540, 3406, 3409, 5457, 9567, 9568, 9569, 3439, 3442, 3445, 3446, 3447, 3450, 3453, 3456, 11648, 5508, 7557, 7558, 7559, 7560, 11671, 3480, 11674, 3513, 3516, 3518, 5569, 5587, 5590, 3554, 5602, 3556, 5605, 5620, 5632, 5641, 5671, 5680, 5689, 5692, 9788, 7743, 9791, 5716, 7764, 5718, 7767, 9812, 9818, 9821, 7794, 9842, 9851, 9863, 9864, 9866, 5773, 9869, 5775, 7824, 9887, 9905, 7866, 9923, 9929, 9938, 9947, 9953, 9956, 9965, 7920, 9971, 9974, 9975, 5891, 5892, 5893, 9990, 9993, 9996, 10002, 10005, 10006, 10007, 10008, 10009, 7962, 7965, 7968, 5941, 7995, 5953, 5956, 5959, 8016, 8037, 6007, 8055, 6010, 6031, 6034, 6037, 6040, 6043, 6046, 6049, 6052, 8100, 10150, 6055, 10153, 6058, 10156, 6061, 6064, 6065, 10180, 8136, 10186, 10192, 10195, 8163, 8166, 10216, 8169, 8172, 6132, 10228, 10229, 10231, 8187, 8190]

    del_cond_rd = (lambda r: (r < 2539 or r > 11368 or r in roads_to_rm) and r not in roads_to_keep)
    # del_cond_rd = (lambda r:  not ((r < 2539 or r > 11368) and r not in roads_to_keep) or r in roads_to_rm)

    del_cond_jc = (lambda j: j not in juncs_to_keep)

    signal_ids_to_rm = set()
    juncs_to_keep_dyn = set()

    for r in roads:
        road_id = eval(r.getAttribute("id"))
        junc_id = eval(r.getAttribute("junction"))

        if del_cond_rd(road_id) or del_cond_jc(junc_id):
            # get signals section (should be only one)
            signal_secs = r.getElementsByTagName("signals")
            for signal_sec in signal_secs:
                
                signals = signal_sec.getElementsByTagName("signal")
                for signal in signals:
                    id = signal.getAttribute("id")
                    signal_ids_to_rm.add(id)

            # rm from doc
            r.parentNode.removeChild(r)
            print(f'Removed road {road_id}')
            if not del_cond_rd(road_id):
                print('DELETED DUE TO JUNCTION CONDITION')
        else:
            # Road is kept
            # See linked junctions

            # remove links to removed roads
            link_secs = r.getElementsByTagName("link")
            for link_sec in link_secs[:1]:
                
                links = list(filter(lambda n: n.nodeType == Node.ELEMENT_NODE, link_sec.childNodes))
                for link in links:
                    # delete link insert if linked to a deleted road
                    ty = link.getAttribute("elementType")
                    id = eval(link.getAttribute("elementId"))
                    if (ty == "road" and del_cond_rd(id)) or (ty == "junction" and del_cond_jc(id)):
                        print(f'Deleting reference in {road_id}')
                        link.parentNode.removeChild(link)

                    if ty == "junction":
                        juncs_to_keep_dyn.add(id)

    print(juncs_to_keep_dyn)
    connecting_roads = set()
    juncs_to_keep_dyn_real = set()
    for j in junctions:
        junc_id = eval(j.getAttribute("id"))

        if del_cond_jc(junc_id):
            # rm from doc
            j.parentNode.removeChild(j)
            print(f'Removed junction {junc_id}')
        else:
            connections = j.getElementsByTagName("connection")
            for connection in connections:
                con_rd = eval(connection.getAttribute("connectingRoad"))
                connecting_roads.add(con_rd)
                inc_rd = eval(connection.getAttribute("incomingRoad"))
                connecting_roads.add(inc_rd)

        # handle junctions to keep real
        if junc_id in juncs_to_keep_dyn:
            tokeep = True
            connections = j.getElementsByTagName("connection")
            for connection in connections:
                inc_rd = eval(connection.getAttribute("incomingRoad"))
                if del_cond_rd(inc_rd):
                    tokeep = False

            if tokeep:
                juncs_to_keep_dyn_real.add(junc_id)


    print(connecting_roads)
    print(juncs_to_keep_dyn_real)

    # check if signals are referencedin any of the junctions
    for r in roads:
        # get signals section (should be only one)
        signal_secs = r.getElementsByTagName("signals")
        for signal_sec in signal_secs:
            
            signal_refs = signal_sec.getElementsByTagName("signalReference")
            for signal_ref in signal_refs:
                id = signal_ref.getAttribute("id")
                if id in signal_ids_to_rm:
                    signal_ref.parentNode.removeChild(signal_ref)

    pretty = doc.toxml()

    with open(f'{m}crop.xodr', "w") as file1:
        file1.write(pretty)


if __name__ == '__main__':
    try:
        main()
    except KeyboardInterrupt:
        print('\nExit by user.')
    finally:
        print('\nExit.')